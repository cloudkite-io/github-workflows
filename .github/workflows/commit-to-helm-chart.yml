# Use APPLICATION_NAME if you have a single image tag to commit, or APPLICATIONS_LIST if multiple
name: Deploy

on:
  workflow_call:
    inputs:
      APPLICATION_NAME:
        required: false
        type: string
      APPLICATIONS_LIST:
        required: false
        type: string
      APPLICATIONS_PREFIX:
        required: false
        type: string
      ENVIRONMENT:
        required: true
        type: string
      HELM_CHART_PATH:
        required: true
        type: string
      INFRA_REPO:
        required: true
        type: string
      INFRA_REPO_BRANCH:
        required: true
        type: string
      REGISTRY_URL:
        required: true
        type: string
    secrets:
      INFRA_SSH_KEY:
        required: true

jobs:
  argocd:
    runs-on: ubuntu-latest
    steps:
      - name: Check out application code
        uses: actions/checkout@v4

      - name: Git Commit - get commit author data
        run: |-
          echo "COMMIT_AUTHOR_NAME=$(git log --format='%an <%ae>' -n 1 HEAD | cut -d '<' -f 2 | cut -d '@' -f 1)" >> $GITHUB_ENV
          echo "COMMIT_AUTHOR_EMAIL=$(git log --format='%an <%ae>' -n 1 HEAD | cut -d '<' -f 2 | cut -d '>' -f 1)" >> $GITHUB_ENV
          echo "COMMIT_AUTHOR=$(git log --format='%an <%ae>' -n 1 HEAD)" >> $GITHUB_ENV
      
      - name: Infrastructure repo checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.INFRA_REPO }}
          ssh-key: ${{ secrets.INFRA_SSH_KEY }}
          ref: ${{ inputs.INFRA_REPO_BRANCH }}

      - name: Set new tag
        if: ${{ inputs.APPLICATION_NAME != '' && inputs.APPLICATIONS_LIST == '' }}
        run: |
           yq -i ".standard-app.tag = \"$GITHUB_SHA\"" ${{ inputs.HELM_CHART_PATH }}/${{ inputs.APPLICATION_NAME }}/${{ inputs.ENVIRONMENT }}.values.yaml

      - name: Set new tags
        if: ${{ inputs.APPLICATION_NAME == '' && inputs.APPLICATIONS_LIST != '' }}
        run: |
          #  yq -i ".standard-app.tag = \"$GITHUB_SHA\"" ${{ inputs.HELM_CHART_PATH }}/${{ inputs.APPLICATION_NAME }}/${{ inputs.ENVIRONMENT }}.values.yaml
          echo ${{ fromJson(inputs.APPLICATIONS_LIST) }}

      # - name: Set new tags
      #   shell: bash
      #   run: |-
      #     git config user.name ${{ env.COMMIT_AUTHOR_NAME }}  
      #     git config user.email ${{ env.COMMIT_AUTHOR_EMAIL }}
      #     git add .
      #     git commit -m "Deploying $GITHUB_SHA
      #     Author: ${{ env.COMMIT_AUTHOR }}"
      #     git push origin ${{ inputs.INFRA_REPO_BRANCH }}